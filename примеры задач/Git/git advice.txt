Система контроля версий Git — самый популярный в мире инструмент для командной работы над IT-проектами

Git решает следующие задачи:

Хранение актуальных версий файлов
Отслеживание изменений файлов
Командное обсуждение изменений
Параллельное развитие проекта
Возможность копирования проекта
Публичная и приватная демонстрация файлов
Перед стартом работы с Git необходимо:

настроить видимость скрытых папок и файлов
настроить видимость расширения файлов
настроить работу редактора кода (рекомендуемый Visual Code Studio)
настроить плагин для универсального языка разметки Markdown
Чтобы установить Git на своем компьютере, загрузите файл по ссылке (выберите свою операционную систему Windows/macOS/Linux)

Командная строка (терминал) - это интерфейс для общения с компьютером напрямую, без дополнительных программ

Как найти командную строку в своей операционной системе?

Windows - Пуск - Git Bash
macOS - Launchpad - Терминал
Linux - Открытие терминала сочетанием клавиш Ctrl + Alt + T
Как проверить версию Git, которая установлена на компьютере?

Введите в терминале команду git – version
Какие глобальные настройки по Git нужно произвести перед стартом работы?

Задайте имя для Git через команду
git config --global user.name “Emma Paris” (в кавычках указать ваше имя латинскими буквами)

Задайте адрес электронной почты для Git через команду

git config --global user.email “eparis@atlassian.com” (в кавычках указать вашу электронную почту)
(в кавычках указать вашу электронную почту)

Задайте правильный формат строк.
Если у вас macOS или Linux , последовательно выполните две команды:
git config --global core.autocrlf input
git config --global core.safecrlf warn

Если у вас Windows , то выполните последовательно эти команды:

git config --global core.autocrlf true

git config --global core.safecrlf warn

Дальше общая для всех операционных систем команда, которая позволит

избежать нечитаемых строк в неправильной кодировке:

git config --global core.quotepath off

Задайте общепринятое название основной ветки в репозитории в Git — main через команду git config --global init.defaultBranch main
Как получить подсказку (справку) по командам?

git help -g даст подробную подсказку по всем доступным командам
git help команда даст подсказку по конкретной команде
чтобы выйти из справки, нажмите Escape → наберите :wq → нажмите Enter
После изучения теоретического материала рекомендуем приступить к практике. Выполните самостоятельное задание - квиз по установке Git на своей операционной системе. Выполните его обязательно. Это позволит вам выполнять дальнейшие практические задания в рамках курса.

Желаем успехов в обучении!
Репозиторий — папка, за которой следит Git. Бывают 2 видов:

локальный - располагается на локальным компьютере
удаленный - располагается в интернете, связан с папкой на локальным компьютере
Как создать локальный репозиторий?

Создайте папку проекта на компьютере
Откройте для папки терминал
Выполните команду git init
Проверьте, что появилась папка .git
Коммит - снимок ваших локальных файлов, записанный в локальный репозиторий

Возможности коммита

Отслеживать, кто, что и когда когда изменял
Возвращаться к предыдущему состоянию файла
Переписывать историю файлов
Как создать коммит?

Добавьте файл или файлы в отслеживаемые командой git add имя файла
Создайте коммит и подпишите его командой git commit -m "Подпись коммита"
Как проверить состояние файла?

На любом из этапов вы можете выполнить команду git status
Как прочитать историю коммита?

Выполните в терминале команду git log --oneline
Пример истории коммита

2199e0e (HEAD -> main) change README

9b7bb91 add README

Слева направо и сверху-вниз

хэш коммита
указатель на коммит, где сейчас находимся
коммит, где находимся
предыдущий коммит
Как исправить историю коммита?

Внесите изменения в файл
Сохраните файл и добавьте его в отслеживаемые через команду git add имя файла. Если нужно добавить сразу несколько файлов, то используйте флаг -A git add -А
Поместите файл в последний коммит — снова используем команду git commit --amend -m “название изменений”.
Как переключиться между коммитами?

Переключиться между коммитами проекта можно командой git checkout хеш
Вернуться к последнему коммиту можно командой git checkout -
После изучения теоретического материала рекомендуем приступить к практике. Выполните самостоятельное задание - квиз по созданию локального репозитория в Git. Выполните его обязательно. Это позволит вам выполнять дальнейшие практические задания в рамках курса.
